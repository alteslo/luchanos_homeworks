"""ДЗ: ДЗ Глава 5
можно читать не очень внимательно: 190-195

ВЫУЧИТЬ НАИЗУСТЬ ТАБЛИЦУ ПРИОРИТЕТОВ ОПЕРАЦИЙ

ВЫУЧИТЬ ТАБЛИЦУ ИСТИННОСТИ ЛОГИЧЕСКИХ ОПЕРАЦИЙ
https://www.math.spbu.ru/user/nlebedin/bit_operat_2017.pdf - годная методичка

Термины которые изучим потом:
- списковое включение
- включение множеств
- включение словарей

ЗАДАЧИ:
Принимаем на вход строку произвольного текста. Нужно заменить каждый третий символ на *.

Пользователь вводит число. Найти самую большую и самую маленькую цифру в этом числе и вывести
их на экран.

ПРАКТИЧЕСКАЯ РАБОТА:
сравнить между собой строки и объяснить результат:
'123' и '1234'
'abc' и 'abcd'
'a123' и '123'
'abc' и ''

Привести к типу bool и посмотреть что получится:
1, '1', 0, '0',

+ задачи из методички к первому уроку """

# num = int(input("Введите число: "))  # 12934919234, 900000000000000000000000000000000000000000000000000000000000009
# num_for_work = num
# max_num = 0
# cnt = 0
#
# while num_for_work > 0:
#     last_num = num_for_work % 10
#     if last_num > max_num:
#         max_num = last_num
#     cnt += 1
#     if max_num == 9:
#         break
#     num_for_work //= 10
#
# print("max number in {} is {} for {} steps".format(num, max_num, cnt))

# c = ''
#
# while c != 'stop':
#     num = input("Свободу Навальному? ")
#     if num.lower() == 'да':
#         break
#     elif num.lower() == 'нет':
#         print("Мы спросим вас ещё раз ")
#         c = 'stop'
#         continue
#     print("ОЛОЛОЛОЛОЛОЛОЛО")
# else:
#     print('kek')
# print('Свободу Навальному!')

# s = 'some shiny test string'
# res = ''
# cnt = 2
# while cnt < len(s):
#     res += s[cnt]
#     cnt += 1
# print(res)

# синтаксис среза [НАЧАЛО : КОНЕЦ : ШАГ] при этом КОНЕЦ не включается в границу
s = 'some shiny test string'
s1 = '0123456789'
# res = s1[2:9]
# res = s1[:100000:3]
# res = s1[::3]
# res = s1[::-2]
# print(res)

# a = 1
# b = 'text'
# l = [a, b, 3, 4, 5, 'text', s, s1, print]
# print(l)
# print(l[0])
# l[0] = 'Dasha'
# print(l)
# a = 10
# b = 'sdf'
# print(l)
# res = l[2:9]
# res = l[:100000:3]
# res = l[::3]
# res = l[::-2]
# print(res)

"""Коллекция в программировании — программный объект, содержащий в себе, тем или иным образом, 
набор значений одного или различных типов, и позволяющий обращаться к этим значениям. 
Коллекция позволяет записывать в себя значения и извлекать их."""
f = 123
# l = [f, ['a', 'b'], [1, 2, 3], 3, 40, 5, 'text', s, s1, print]
# print(l[2])
# l[2][1] = 'SOME VALUE'
# print(l)




# l1 = ['a', 'b']  # создалась ссылка на участок памяти где хранится ['a', 'b'] ССЫЛКА 1
# l2 = [1, 2, 3]
#
# l = [f, l1, l2, 3, 40, 5, 'text', s, s1, print]  # поместили ссылку на учаток памяти
# # где хранится ['a', 'b'] в лист l CCЫЛКА 2
# print(l)
#
# # f = 'dfdsfsdfgvs'
# # l1[0] = 'ПРИВЕТ'  # поменяли элемент в том участке памяти, на который ссылаются l (один из элементов) и l1
# # print(l)
#
# l1 = [7, 8, 9]  # мы для переменной l1 отвязали ссылку к области памяти, где лежал прежний лист и связали l1 с другой
# # областью памяти, где лежит [7, 8, 9] ССЫЛКА 3, КОТОРАЯ НЕ ИМЕЕТ НИЧЕГО ОБЩЕГО С ССЫЛКОЙ 1 И ССЫЛКОЙ 2
# print(l)



# t = (1, 2, 3, 4, 5, 'text', s, s1, print)
# t[0] = 'kek' # упадём с ошибкой!
# print(t)

f = 123
l1 = ['a', 'b']  # создалась ссылка на участок памяти где хранится ['a', 'b'] ССЫЛКА 1
l2 = [1, 2, 3]

l = (f, l1, l2, 3, 40, 5, 'text', s, s1, print)  # поместили ссылку на учаток памяти
# где хранится ['a', 'b'] в лист l CCЫЛКА 2
print(l)
l[1][0] = 12345

f = 'dfdsfsdfgvs'
l1[1] = 'ПРИВЕТ'  # поменяли элемент в том участке памяти, на который ссылаются l (один из элементов) и l1
print(l)

l1 = [7, 8, 9]  # мы для переменной l1 отвязали ссылку к области памяти, где лежал прежний лист и связали l1 с другой
# областью памяти, где лежит [7, 8, 9] ССЫЛКА 3, КОТОРАЯ НЕ ИМЕЕТ НИЧЕГО ОБЩЕГО С ССЫЛКОЙ 1 И ССЫЛКОЙ 2
print(l)

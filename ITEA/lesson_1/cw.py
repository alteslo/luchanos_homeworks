"""Типы данных
Встроенные контейнеры
Операторы контроля выполнения
Обработка ошибок (try ... except ...)
Операторы циклов
Comprehensions (list, dict, set)
Создание функции и процедур
Аргументы функций
Рекурсивные функции
Functors, Currying
Декораторы
Lambda-функции
PEP8
"""

"""
- Типы данных: бывают изменяемые и неизменяемые (хэшируемые и нехэшируемые). int, bool, str 
Кто хочет повторить - читайте часть 2 Лутца 1 том.
Числовые типы, строковые типы
Изменяемые и неизменяемые.

- Встроенные контейнеры:
Списки - изменяемые, кортежи - нет.
Множества - изменяемые, но не могут в себе содержать изменяемые элменты. Если надо сделать множество множеств
используем frozenset.
Словари - классическая хэшмап. Очень быстро ищем элементы.

- Операторы контроля выполнения: ветвления и циклы.
Если в языке программирования реализовано ветвление и цикл, то можно написать любую программу.

- Обработка ошибок (try ... except ...):
Необходимо для отлова внештатных ситуаций и перевода их в разряд штатных.
Практический пример - штука с таймаутом.

- Операторы циклов: for, while, break, continue

- Comprehensions (list, dict, set):
Синтаксический сахар, позволяющий генерировать коллекции "на лету". Почему? Потому что работаем быстрее)

- Создание функции и процедур:
Объявление через def, процедуры - аналогичнно тому, что и функции.

- Functors, Currying:
https://www.internet-technologies.ru/articles/i-opyat-o-funkcionalnom-programmirovanii-na-python.html
По сути Currying это когда функция внутри функции
https://www.youtube.com/watch?v=-ZY0KHGOQoY - материал по функцторам

- Декораторы:
Паттерн проектирования, который позволяет изменять поведение целевой функции без её переписывания.

Подробности тут:
https://www.youtube.com/watch?v=GhgmInoT54c&list=PLlKID9PnOE5h8VJyEiEd_Uv_-tt9KX7MD&index=1 

ДЗ:

1. Написать уникализатор
2. Написать 

Написать параметризованный retry декоратор с параметром. 
"""